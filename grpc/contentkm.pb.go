// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contentkm.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Document_Langue int32

const (
	Document_ENGLISH    Document_Langue = 0
	Document_FRENCH     Document_Langue = 1
	Document_PORTUGUESE Document_Langue = 2
	Document_SPANISH    Document_Langue = 3
	Document_SWAHILI    Document_Langue = 4
)

var Document_Langue_name = map[int32]string{
	0: "ENGLISH",
	1: "FRENCH",
	2: "PORTUGUESE",
	3: "SPANISH",
	4: "SWAHILI",
}

var Document_Langue_value = map[string]int32{
	"ENGLISH":    0,
	"FRENCH":     1,
	"PORTUGUESE": 2,
	"SPANISH":    3,
	"SWAHILI":    4,
}

func (x Document_Langue) String() string {
	return proto.EnumName(Document_Langue_name, int32(x))
}

func (Document_Langue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{2, 0}
}

type Document_Niveau int32

const (
	Document_LOW      Document_Niveau = 0
	Document_MEDIUM   Document_Niveau = 1
	Document_HIGH     Document_Niveau = 2
	Document_CRITICAL Document_Niveau = 3
)

var Document_Niveau_name = map[int32]string{
	0: "LOW",
	1: "MEDIUM",
	2: "HIGH",
	3: "CRITICAL",
}

var Document_Niveau_value = map[string]int32{
	"LOW":      0,
	"MEDIUM":   1,
	"HIGH":     2,
	"CRITICAL": 3,
}

func (x Document_Niveau) String() string {
	return proto.EnumName(Document_Niveau_name, int32(x))
}

func (Document_Niveau) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{2, 1}
}

type Document_FiltreVisuel int32

const (
	Document_IG_WILLOW    Document_FiltreVisuel = 0
	Document_IG_WALDEN    Document_FiltreVisuel = 1
	Document_IG_VALENCIA  Document_FiltreVisuel = 2
	Document_IG_TOASTER   Document_FiltreVisuel = 3
	Document_IG_SUTRO     Document_FiltreVisuel = 4
	Document_IG_SIERRA    Document_FiltreVisuel = 5
	Document_IG_RISE      Document_FiltreVisuel = 6
	Document_IG_NASHVILLE Document_FiltreVisuel = 7
	Document_IG_MAYFAIR   Document_FiltreVisuel = 8
	Document_IG_LOFI      Document_FiltreVisuel = 9
	Document_IG_KELVIN    Document_FiltreVisuel = 10
	Document_IG_INKWELL   Document_FiltreVisuel = 11
	Document_IG_HUDSON    Document_FiltreVisuel = 12
	Document_IG_HEFE      Document_FiltreVisuel = 13
	Document_IG_EARLYBIRD Document_FiltreVisuel = 14
	Document_IG_BRANNAN   Document_FiltreVisuel = 15
	Document_IG_AMARO     Document_FiltreVisuel = 16
	Document_IG_1977      Document_FiltreVisuel = 17
)

var Document_FiltreVisuel_name = map[int32]string{
	0:  "IG_WILLOW",
	1:  "IG_WALDEN",
	2:  "IG_VALENCIA",
	3:  "IG_TOASTER",
	4:  "IG_SUTRO",
	5:  "IG_SIERRA",
	6:  "IG_RISE",
	7:  "IG_NASHVILLE",
	8:  "IG_MAYFAIR",
	9:  "IG_LOFI",
	10: "IG_KELVIN",
	11: "IG_INKWELL",
	12: "IG_HUDSON",
	13: "IG_HEFE",
	14: "IG_EARLYBIRD",
	15: "IG_BRANNAN",
	16: "IG_AMARO",
	17: "IG_1977",
}

var Document_FiltreVisuel_value = map[string]int32{
	"IG_WILLOW":    0,
	"IG_WALDEN":    1,
	"IG_VALENCIA":  2,
	"IG_TOASTER":   3,
	"IG_SUTRO":     4,
	"IG_SIERRA":    5,
	"IG_RISE":      6,
	"IG_NASHVILLE": 7,
	"IG_MAYFAIR":   8,
	"IG_LOFI":      9,
	"IG_KELVIN":    10,
	"IG_INKWELL":   11,
	"IG_HUDSON":    12,
	"IG_HEFE":      13,
	"IG_EARLYBIRD": 14,
	"IG_BRANNAN":   15,
	"IG_AMARO":     16,
	"IG_1977":      17,
}

func (x Document_FiltreVisuel) String() string {
	return proto.EnumName(Document_FiltreVisuel_name, int32(x))
}

func (Document_FiltreVisuel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{2, 2}
}

type Media_Categorie int32

const (
	Media_AUDIO    Media_Categorie = 0
	Media_DOCUMENT Media_Categorie = 1
	Media_IMAGE    Media_Categorie = 2
	Media_VIDEO    Media_Categorie = 3
)

var Media_Categorie_name = map[int32]string{
	0: "AUDIO",
	1: "DOCUMENT",
	2: "IMAGE",
	3: "VIDEO",
}

var Media_Categorie_value = map[string]int32{
	"AUDIO":    0,
	"DOCUMENT": 1,
	"IMAGE":    2,
	"VIDEO":    3,
}

func (x Media_Categorie) String() string {
	return proto.EnumName(Media_Categorie_name, int32(x))
}

func (Media_Categorie) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{3, 0}
}

type Content struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	MediaItems           []*Media    `protobuf:"bytes,2,rep,name=media_items,json=mediaItems,proto3" json:"media_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{0}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *Content) GetMediaItems() []*Media {
	if m != nil {
		return m.MediaItems
	}
	return nil
}

type ContentHandles struct {
	ItemIds              []*Identification `protobuf:"bytes,1,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContentHandles) Reset()         { *m = ContentHandles{} }
func (m *ContentHandles) String() string { return proto.CompactTextString(m) }
func (*ContentHandles) ProtoMessage()    {}
func (*ContentHandles) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{1}
}

func (m *ContentHandles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentHandles.Unmarshal(m, b)
}
func (m *ContentHandles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentHandles.Marshal(b, m, deterministic)
}
func (m *ContentHandles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentHandles.Merge(m, src)
}
func (m *ContentHandles) XXX_Size() int {
	return xxx_messageInfo_ContentHandles.Size(m)
}
func (m *ContentHandles) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentHandles.DiscardUnknown(m)
}

var xxx_messageInfo_ContentHandles proto.InternalMessageInfo

func (m *ContentHandles) GetItemIds() []*Identification {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *ContentHandles) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Document struct {
	Title                string                `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Slug                 string                `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Publish              bool                  `protobuf:"varint,3,opt,name=publish,proto3" json:"publish,omitempty"`
	Body                 string                `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Langue               Document_Langue       `protobuf:"varint,5,opt,name=langue,proto3,enum=grpc.Document_Langue" json:"langue,omitempty"`
	Niveau               Document_Niveau       `protobuf:"varint,6,opt,name=niveau,proto3,enum=grpc.Document_Niveau" json:"niveau,omitempty"`
	FiltreVisuel         Document_FiltreVisuel `protobuf:"varint,7,opt,name=filtre_visuel,json=filtreVisuel,proto3,enum=grpc.Document_FiltreVisuel" json:"filtre_visuel,omitempty"`
	Metadata             *MetaData             `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{2}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Document) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Document) GetPublish() bool {
	if m != nil {
		return m.Publish
	}
	return false
}

func (m *Document) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Document) GetLangue() Document_Langue {
	if m != nil {
		return m.Langue
	}
	return Document_ENGLISH
}

func (m *Document) GetNiveau() Document_Niveau {
	if m != nil {
		return m.Niveau
	}
	return Document_LOW
}

func (m *Document) GetFiltreVisuel() Document_FiltreVisuel {
	if m != nil {
		return m.FiltreVisuel
	}
	return Document_IG_WILLOW
}

func (m *Document) GetMetadata() *MetaData {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Media struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Categorie            Media_Categorie `protobuf:"varint,2,opt,name=categorie,proto3,enum=grpc.Media_Categorie" json:"categorie,omitempty"`
	FileUrl              string          `protobuf:"bytes,3,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Metadata             *MetaData       `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{3}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Media) GetCategorie() Media_Categorie {
	if m != nil {
		return m.Categorie
	}
	return Media_AUDIO
}

func (m *Media) GetFileUrl() string {
	if m != nil {
		return m.FileUrl
	}
	return ""
}

func (m *Media) GetMetadata() *MetaData {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MetaData struct {
	Identification       *Identification     `protobuf:"bytes,1,opt,name=identification,proto3" json:"identification,omitempty"`
	Timestamps           *TimeStamps         `protobuf:"bytes,2,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	M                    map[string]*any.Any `protobuf:"bytes,3,rep,name=m,proto3" json:"m,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MetaData) Reset()         { *m = MetaData{} }
func (m *MetaData) String() string { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()    {}
func (*MetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{4}
}

func (m *MetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaData.Unmarshal(m, b)
}
func (m *MetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaData.Marshal(b, m, deterministic)
}
func (m *MetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaData.Merge(m, src)
}
func (m *MetaData) XXX_Size() int {
	return xxx_messageInfo_MetaData.Size(m)
}
func (m *MetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaData.DiscardUnknown(m)
}

var xxx_messageInfo_MetaData proto.InternalMessageInfo

func (m *MetaData) GetIdentification() *Identification {
	if m != nil {
		return m.Identification
	}
	return nil
}

func (m *MetaData) GetTimestamps() *TimeStamps {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

func (m *MetaData) GetM() map[string]*any.Any {
	if m != nil {
		return m.M
	}
	return nil
}

type Identification struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Tags                 []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identification) Reset()         { *m = Identification{} }
func (m *Identification) String() string { return proto.CompactTextString(m) }
func (*Identification) ProtoMessage()    {}
func (*Identification) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{5}
}

func (m *Identification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identification.Unmarshal(m, b)
}
func (m *Identification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identification.Marshal(b, m, deterministic)
}
func (m *Identification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identification.Merge(m, src)
}
func (m *Identification) XXX_Size() int {
	return xxx_messageInfo_Identification.Size(m)
}
func (m *Identification) XXX_DiscardUnknown() {
	xxx_messageInfo_Identification.DiscardUnknown(m)
}

var xxx_messageInfo_Identification proto.InternalMessageInfo

func (m *Identification) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Identification) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Identification) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type TimeStamps struct {
	Created              *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeStamps) Reset()         { *m = TimeStamps{} }
func (m *TimeStamps) String() string { return proto.CompactTextString(m) }
func (*TimeStamps) ProtoMessage()    {}
func (*TimeStamps) Descriptor() ([]byte, []int) {
	return fileDescriptor_63e96ee2b70a1102, []int{6}
}

func (m *TimeStamps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeStamps.Unmarshal(m, b)
}
func (m *TimeStamps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeStamps.Marshal(b, m, deterministic)
}
func (m *TimeStamps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeStamps.Merge(m, src)
}
func (m *TimeStamps) XXX_Size() int {
	return xxx_messageInfo_TimeStamps.Size(m)
}
func (m *TimeStamps) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeStamps.DiscardUnknown(m)
}

var xxx_messageInfo_TimeStamps proto.InternalMessageInfo

func (m *TimeStamps) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *TimeStamps) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func init() {
	proto.RegisterEnum("grpc.Document_Langue", Document_Langue_name, Document_Langue_value)
	proto.RegisterEnum("grpc.Document_Niveau", Document_Niveau_name, Document_Niveau_value)
	proto.RegisterEnum("grpc.Document_FiltreVisuel", Document_FiltreVisuel_name, Document_FiltreVisuel_value)
	proto.RegisterEnum("grpc.Media_Categorie", Media_Categorie_name, Media_Categorie_value)
	proto.RegisterType((*Content)(nil), "grpc.Content")
	proto.RegisterType((*ContentHandles)(nil), "grpc.ContentHandles")
	proto.RegisterType((*Document)(nil), "grpc.Document")
	proto.RegisterType((*Media)(nil), "grpc.Media")
	proto.RegisterType((*MetaData)(nil), "grpc.MetaData")
	proto.RegisterMapType((map[string]*any.Any)(nil), "grpc.MetaData.MEntry")
	proto.RegisterType((*Identification)(nil), "grpc.Identification")
	proto.RegisterType((*TimeStamps)(nil), "grpc.TimeStamps")
}

func init() { proto.RegisterFile("contentkm.proto", fileDescriptor_63e96ee2b70a1102) }

var fileDescriptor_63e96ee2b70a1102 = []byte{
	// 980 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xef, 0x6e, 0xdb, 0x36,
	0x17, 0xc6, 0x23, 0xff, 0xf7, 0x71, 0xe2, 0xf0, 0x25, 0x52, 0xbc, 0xaa, 0x07, 0x6c, 0x81, 0xf6,
	0x25, 0x28, 0x32, 0x67, 0x4b, 0xb7, 0x75, 0x2b, 0xf6, 0x61, 0xaa, 0xad, 0xc8, 0x5c, 0x64, 0xb9,
	0xa0, 0xed, 0x04, 0xc5, 0x30, 0x08, 0x8c, 0xc5, 0x78, 0x42, 0x25, 0x39, 0xb0, 0xa8, 0x60, 0xbe,
	0x99, 0xdd, 0x54, 0x77, 0x17, 0xbb, 0x89, 0x81, 0x14, 0x95, 0xc4, 0x59, 0x83, 0xee, 0x1b, 0x0f,
	0xcf, 0xef, 0x79, 0xc8, 0x43, 0x1d, 0x1d, 0xd8, 0x5f, 0xac, 0x52, 0xc1, 0x53, 0xf1, 0x3e, 0xe9,
	0xdf, 0xac, 0x57, 0x62, 0x85, 0x6b, 0xcb, 0xf5, 0xcd, 0xa2, 0xf7, 0x7c, 0xb9, 0x5a, 0x2d, 0x63,
	0x7e, 0xa2, 0xf6, 0xae, 0xf2, 0xeb, 0x13, 0x96, 0x6e, 0x0a, 0xa0, 0xf7, 0xc5, 0xe3, 0x94, 0x88,
	0x12, 0x9e, 0x09, 0x96, 0xdc, 0x14, 0x80, 0xc5, 0xa1, 0x39, 0x28, 0x4c, 0xf1, 0x31, 0xb4, 0xc3,
	0xd5, 0x22, 0x4f, 0x78, 0x2a, 0x32, 0xd3, 0x38, 0xac, 0x1e, 0x75, 0x4e, 0xbb, 0x7d, 0x79, 0x40,
	0x7f, 0xa8, 0xb7, 0xe9, 0x3d, 0x80, 0x8f, 0xa1, 0x93, 0xf0, 0x30, 0x62, 0x41, 0x24, 0x78, 0x92,
	0x99, 0x15, 0xc5, 0x77, 0x0a, 0x7e, 0x2c, 0x13, 0x14, 0x54, 0x9e, 0xc8, 0xb4, 0xf5, 0x2b, 0x74,
	0xf5, 0x31, 0x23, 0x96, 0x86, 0x31, 0xcf, 0xf0, 0x09, 0xb4, 0xa4, 0x32, 0x88, 0xc2, 0xf2, 0xb0,
	0x83, 0x42, 0x4c, 0x42, 0x9e, 0x8a, 0xe8, 0x3a, 0x5a, 0x30, 0x11, 0xad, 0x52, 0xda, 0x94, 0x14,
	0x09, 0x33, 0x6c, 0x42, 0x33, 0xe1, 0x59, 0xc6, 0x96, 0xdc, 0xac, 0x1c, 0x1a, 0x47, 0x6d, 0x5a,
	0x86, 0xd6, 0x87, 0x3a, 0xb4, 0xca, 0x2b, 0xe2, 0x03, 0xa8, 0x8b, 0x48, 0xc4, 0xdc, 0x34, 0x14,
	0x54, 0x04, 0x18, 0x43, 0x2d, 0x8b, 0xf3, 0xa5, 0x56, 0xaa, 0xb5, 0x34, 0xbc, 0xc9, 0xaf, 0xe2,
	0x28, 0xfb, 0xdd, 0xac, 0x1e, 0x1a, 0x47, 0x2d, 0x5a, 0x86, 0x92, 0xbe, 0x5a, 0x85, 0x1b, 0xb3,
	0x56, 0xd0, 0x72, 0x8d, 0xbf, 0x82, 0x46, 0xcc, 0xd2, 0x65, 0xce, 0xcd, 0xfa, 0xa1, 0x71, 0xd4,
	0x3d, 0x7d, 0xb6, 0xfd, 0x34, 0x7d, 0x4f, 0x25, 0xa9, 0x86, 0x24, 0x9e, 0x46, 0xb7, 0x9c, 0xe5,
	0x66, 0xe3, 0xa3, 0xb8, 0xaf, 0x92, 0x54, 0x43, 0xf8, 0x67, 0xd8, 0xbb, 0x8e, 0x62, 0xb1, 0xe6,
	0xc1, 0x6d, 0x94, 0xe5, 0x3c, 0x36, 0x9b, 0x4a, 0xf5, 0xd9, 0x23, 0xd5, 0x99, 0x62, 0x2e, 0x14,
	0x42, 0x77, 0xaf, 0x1f, 0x44, 0xf8, 0x05, 0xb4, 0x12, 0x2e, 0x58, 0xc8, 0x04, 0x33, 0x5b, 0x87,
	0xc6, 0xfd, 0xc7, 0x1b, 0x73, 0xc1, 0x86, 0x4c, 0x30, 0x7a, 0x97, 0xb7, 0xce, 0xa1, 0x51, 0x5c,
	0x17, 0x77, 0xa0, 0xe9, 0xf8, 0xae, 0x47, 0xa6, 0x23, 0xb4, 0x83, 0x01, 0x1a, 0x67, 0xd4, 0xf1,
	0x07, 0x23, 0x64, 0xe0, 0x2e, 0xc0, 0xdb, 0x09, 0x9d, 0xcd, 0xdd, 0xb9, 0x33, 0x75, 0x50, 0x45,
	0x82, 0xd3, 0xb7, 0xb6, 0x2f, 0xc1, 0xaa, 0x0a, 0x2e, 0xed, 0x11, 0xf1, 0x08, 0xaa, 0x59, 0xdf,
	0x41, 0xa3, 0x28, 0x06, 0x37, 0xa1, 0xea, 0x4d, 0x2e, 0x0b, 0xa3, 0xb1, 0x33, 0x24, 0xf3, 0x31,
	0x32, 0x70, 0x0b, 0x6a, 0x23, 0xe2, 0x8e, 0x50, 0x05, 0xef, 0x42, 0x6b, 0x40, 0xc9, 0x8c, 0x0c,
	0x6c, 0x0f, 0x55, 0xad, 0x3f, 0x2b, 0xb0, 0xfb, 0xb0, 0x1c, 0xbc, 0x07, 0x6d, 0xe2, 0x06, 0x97,
	0xc4, 0x2b, 0x3c, 0x74, 0x68, 0x7b, 0x43, 0xc7, 0x47, 0x06, 0xde, 0x87, 0x0e, 0x71, 0x83, 0x0b,
	0xdb, 0x73, 0xfc, 0x01, 0xb1, 0x51, 0x45, 0x5e, 0x90, 0xb8, 0xc1, 0x6c, 0x62, 0x4f, 0x67, 0x0e,
	0x45, 0x55, 0xe9, 0x4e, 0xdc, 0x60, 0x3a, 0x9f, 0xd1, 0x09, 0xaa, 0x69, 0xf5, 0x94, 0x38, 0x94,
	0xda, 0xa8, 0x2e, 0x2f, 0x4c, 0xdc, 0x80, 0x92, 0xa9, 0x83, 0x1a, 0x18, 0xc1, 0x2e, 0x71, 0x03,
	0xdf, 0x9e, 0x8e, 0x2e, 0x88, 0xe7, 0x39, 0xa8, 0xa9, 0xbd, 0xc6, 0xf6, 0xbb, 0x33, 0x9b, 0x50,
	0xd4, 0xd2, 0xb8, 0x37, 0x39, 0x23, 0xa8, 0xad, 0xad, 0xce, 0x1d, 0xef, 0x82, 0xf8, 0x08, 0x34,
	0x4b, 0xfc, 0xf3, 0x4b, 0xc7, 0xf3, 0x50, 0x47, 0xa7, 0x47, 0xf3, 0xe1, 0x74, 0xe2, 0xa3, 0x5d,
	0x2d, 0x1d, 0x39, 0x67, 0x0e, 0xda, 0xd3, 0x27, 0x39, 0x36, 0xf5, 0xde, 0xbd, 0x21, 0x74, 0x88,
	0xba, 0x5a, 0xfd, 0x86, 0xda, 0xbe, 0x6f, 0xfb, 0x68, 0x5f, 0xdf, 0xda, 0x1e, 0xdb, 0x74, 0x82,
	0x90, 0x16, 0x7f, 0xf3, 0xe3, 0xab, 0x57, 0xe8, 0x7f, 0xd6, 0x07, 0x03, 0xea, 0xea, 0x47, 0x92,
	0xed, 0x98, 0xb2, 0xa4, 0xec, 0x68, 0xb5, 0xc6, 0x2f, 0xa1, 0xbd, 0x60, 0x82, 0x2f, 0x57, 0xeb,
	0xa8, 0xf8, 0x1f, 0xee, 0x5a, 0x4c, 0x69, 0xfa, 0x83, 0x32, 0x49, 0xef, 0x39, 0xfc, 0x1c, 0x5a,
	0xd7, 0x51, 0xcc, 0x83, 0x7c, 0x1d, 0xab, 0x96, 0x6f, 0xd3, 0xa6, 0x8c, 0xe7, 0xeb, 0xed, 0xf6,
	0xa9, 0x7d, 0xa2, 0x7d, 0x5e, 0x43, 0xfb, 0xce, 0x1e, 0xb7, 0xa1, 0x6e, 0xcf, 0x87, 0x64, 0x82,
	0x76, 0x64, 0x31, 0xc3, 0xc9, 0x60, 0x3e, 0x76, 0xfc, 0x19, 0x32, 0x64, 0x82, 0x8c, 0x6d, 0x57,
	0x36, 0x4f, 0x1b, 0xea, 0x17, 0x64, 0xe8, 0x4c, 0x50, 0xd5, 0xfa, 0xdb, 0x80, 0x56, 0x69, 0x89,
	0x7f, 0x82, 0x6e, 0xb4, 0xf5, 0xb7, 0xab, 0x12, 0x9f, 0x9a, 0x04, 0x8f, 0x58, 0xfc, 0x35, 0xc0,
	0xdd, 0x34, 0xcb, 0xd4, 0x1b, 0x74, 0x4e, 0x51, 0xa1, 0x9c, 0x45, 0x09, 0x9f, 0xaa, 0x7d, 0xfa,
	0x80, 0xc1, 0x5f, 0x82, 0x91, 0x98, 0x55, 0x35, 0x6c, 0x9e, 0x6d, 0x57, 0xd7, 0x1f, 0x3b, 0xa9,
	0x58, 0x6f, 0xa8, 0x91, 0xf4, 0x7e, 0x91, 0xcd, 0x2b, 0x03, 0x8c, 0xa0, 0xfa, 0x9e, 0x6f, 0xf4,
	0xb3, 0xcb, 0x25, 0x7e, 0x01, 0xf5, 0x5b, 0x16, 0xe7, 0x5c, 0x9f, 0x76, 0xd0, 0x2f, 0xc6, 0x6b,
	0xbf, 0x1c, 0xaf, 0x7d, 0x3b, 0xdd, 0xd0, 0x02, 0x79, 0x5d, 0xf9, 0xc1, 0xb0, 0x7e, 0x83, 0xee,
	0x76, 0x11, 0xf8, 0xff, 0xd0, 0xcc, 0x33, 0xbe, 0x0e, 0xa2, 0x50, 0xfb, 0x36, 0x64, 0x48, 0x42,
	0xfc, 0x39, 0x40, 0x59, 0x1f, 0x5f, 0xeb, 0x39, 0xf5, 0x60, 0x47, 0x36, 0x81, 0x60, 0xcb, 0x4c,
	0x5d, 0xbf, 0x4d, 0xd5, 0xda, 0xfa, 0x03, 0xe0, 0xbe, 0x52, 0xfc, 0x2d, 0x34, 0x17, 0x6b, 0xce,
	0x04, 0x0f, 0xf5, 0x33, 0xf6, 0xfe, 0x75, 0xbd, 0x59, 0xf9, 0x16, 0xb4, 0x44, 0xa5, 0x2a, 0xbf,
	0x09, 0x95, 0xaa, 0xf2, 0x69, 0x95, 0x46, 0x4f, 0xff, 0x32, 0x00, 0xf4, 0x40, 0x3f, 0x67, 0x09,
	0x3e, 0x81, 0xc6, 0x40, 0xf9, 0xe1, 0xbd, 0xe2, 0x5d, 0x75, 0xae, 0x77, 0xb0, 0x15, 0xea, 0xd9,
	0x6f, 0xed, 0x48, 0xc1, 0x5c, 0x59, 0xfd, 0x57, 0xc1, 0x31, 0x54, 0x5d, 0x2e, 0xf0, 0x47, 0xd3,
	0xbd, 0x6d, 0x0f, 0x6b, 0x07, 0x7f, 0x0f, 0x8d, 0x21, 0x8f, 0xb9, 0xe0, 0x4f, 0x08, 0x9e, 0x38,
	0xe5, 0xaa, 0xa1, 0x6a, 0x7e, 0xf9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x5e, 0xb9, 0x9a,
	0x69, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentKamClient is the client API for ContentKam service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentKamClient interface {
	// Create
	Create(ctx context.Context, in *Content, opts ...grpc.CallOption) (*ContentHandles, error)
	// Update
	Update(ctx context.Context, in *Content, opts ...grpc.CallOption) (*ContentHandles, error)
	// Get
	Get(ctx context.Context, in *ContentHandles, opts ...grpc.CallOption) (*Content, error)
	// Delete
	Delete(ctx context.Context, in *ContentHandles, opts ...grpc.CallOption) (*ContentHandles, error)
}

type contentKamClient struct {
	cc *grpc.ClientConn
}

func NewContentKamClient(cc *grpc.ClientConn) ContentKamClient {
	return &contentKamClient{cc}
}

func (c *contentKamClient) Create(ctx context.Context, in *Content, opts ...grpc.CallOption) (*ContentHandles, error) {
	out := new(ContentHandles)
	err := c.cc.Invoke(ctx, "/grpc.ContentKam/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentKamClient) Update(ctx context.Context, in *Content, opts ...grpc.CallOption) (*ContentHandles, error) {
	out := new(ContentHandles)
	err := c.cc.Invoke(ctx, "/grpc.ContentKam/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentKamClient) Get(ctx context.Context, in *ContentHandles, opts ...grpc.CallOption) (*Content, error) {
	out := new(Content)
	err := c.cc.Invoke(ctx, "/grpc.ContentKam/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentKamClient) Delete(ctx context.Context, in *ContentHandles, opts ...grpc.CallOption) (*ContentHandles, error) {
	out := new(ContentHandles)
	err := c.cc.Invoke(ctx, "/grpc.ContentKam/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentKamServer is the server API for ContentKam service.
type ContentKamServer interface {
	// Create
	Create(context.Context, *Content) (*ContentHandles, error)
	// Update
	Update(context.Context, *Content) (*ContentHandles, error)
	// Get
	Get(context.Context, *ContentHandles) (*Content, error)
	// Delete
	Delete(context.Context, *ContentHandles) (*ContentHandles, error)
}

func RegisterContentKamServer(s *grpc.Server, srv ContentKamServer) {
	s.RegisterService(&_ContentKam_serviceDesc, srv)
}

func _ContentKam_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Content)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentKamServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ContentKam/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentKamServer).Create(ctx, req.(*Content))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentKam_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Content)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentKamServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ContentKam/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentKamServer).Update(ctx, req.(*Content))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentKam_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentHandles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentKamServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ContentKam/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentKamServer).Get(ctx, req.(*ContentHandles))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentKam_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentHandles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentKamServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ContentKam/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentKamServer).Delete(ctx, req.(*ContentHandles))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentKam_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.ContentKam",
	HandlerType: (*ContentKamServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ContentKam_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ContentKam_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ContentKam_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ContentKam_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contentkm.proto",
}
